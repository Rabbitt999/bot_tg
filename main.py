import telebot
import json
import random
import os
import re
import time
from telebot import types
from datetime import datetime, timedelta, timezone

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
TOKEN = os.getenv('7991439480:AAGR8KyC3RnBEVlYpP8-39ExcI-SSAhmPC0')
bot = telebot.TeleBot(TOKEN)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
ADMIN_ID = int(os.getenv('ADMIN_ID', '6974875043'))
CHANNEL_USERNAME = os.getenv('CHANNEL_USERNAME', 'CodeMovie1')
MOVIES_FILE = 'movies.json'
USERS_FILE = 'users.json'
ADMINS_FILE = 'admins.json'

# –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É
user_states = {}
temp_data = {}
genre_search_data = {}
user_movie_history = {}
genre_movie_history = {}

# –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
def ensure_file_exists(filename, default):
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É, —Å—Ç–≤–æ—Ä—é—î —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î"""
    if not os.path.exists(filename):
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(default, f, ensure_ascii=False, indent=2)

def load_movies():
    """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î —Å–ø–∏—Å–æ–∫ —Ñ—ñ–ª—å–º—ñ–≤ –∑ —Ñ–∞–π–ª—É"""
    ensure_file_exists(MOVIES_FILE, [])
    with open(MOVIES_FILE, 'r', encoding='utf-8') as f:
        return json.load(f)

def save_movies(movies):
    """–ó–±–µ—Ä—ñ–≥–∞—î —Å–ø–∏—Å–æ–∫ —Ñ—ñ–ª—å–º—ñ–≤ —É —Ñ–∞–π–ª"""
    with open(MOVIES_FILE, 'w', encoding='utf-8') as f:
        json.dump(movies, f, ensure_ascii=False, indent=2)

def log_user(user_id):
    """–õ–æ–≥—É—î –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    now = datetime.now(timezone.utc).isoformat()
    ensure_file_exists(USERS_FILE, {})
    
    with open(USERS_FILE, 'r+', encoding='utf-8') as f:
        users = json.load(f)
        users[str(user_id)] = now
        f.seek(0)
        json.dump(users, f, ensure_ascii=False, indent=2)

def check_subscription(user_id):
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –ø—ñ–¥–ø–∏—Å–∞–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞ –∫–∞–Ω–∞–ª"""
    try:
        member = bot.get_chat_member(f"@{CHANNEL_USERNAME}", user_id)
        return member.status in ["member", "creator", "administrator"]
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥–ø–∏—Å–∫–∏: {e}")
        return False

def normalize_genre(text):
    """–ù–æ—Ä–º–∞–ª—ñ–∑—É—î –Ω–∞–∑–≤—É –∂–∞–Ω—Ä—É"""
    return re.sub(r'[^a-zA-Z–∞-—è–ê-–Ø—ñ—ó—î“ë–Ü–á–Ñ“ê0-9\s]', '', text.lower().strip())

def format_movie(movie):
    """–§–æ—Ä–º–∞—Ç—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ñ—ñ–ª—å–º"""
    return (f"üé¨ {movie.get('title', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"‚≠ê IMDb: {movie.get('rating', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"‚è± –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: {movie.get('duration', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üìÖ –†—ñ–∫: {movie.get('year', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üîû –í—ñ–∫: {movie.get('age_category', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')}\n"
            f"üåç –ö—Ä–∞—ó–Ω–∞: {movie.get('country', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üé≠ –ñ–∞–Ω—Ä: {movie.get('genre', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"#–ö–æ–¥: {movie.get('code', '–ù–µ–≤—ñ–¥–æ–º–æ')}")

# –ú–µ–Ω—é —Ç–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
def send_main_menu(chat_id):
    """–ù–∞–¥—Å–∏–ª–∞—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('üîç –ü–æ—à—É–∫ —Ñ—ñ–ª—å–º—É –∑–∞ –∫–æ–¥–æ–º')
    markup.row('üé≤ –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ—ñ–ª—å–º', 'üé¨ –ü–æ—à—É–∫ –∑–∞ –∂–∞–Ω—Ä–æ–º')
    if str(chat_id) == str(ADMIN_ID):
        markup.row('–ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å')
    markup.row('‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞')
    bot.send_message(chat_id, '–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é:', reply_markup=markup)

def send_admin_panel(user_id):
    """–ù–∞–¥—Å–∏–ª–∞—î –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('‚ûï –î–æ–¥–∞—Ç–∏ —Ñ—ñ–ª—å–º', '‚ûñ –í–∏–¥–∞–ª–∏—Ç–∏ —Ñ—ñ–ª—å–º')
    markup.row('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '‚óÄÔ∏è –ù–∞–∑–∞–¥')
    bot.send_message(user_id, '–ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å:', reply_markup=markup)

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start'])
def start(message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start"""
    user_id = message.from_user.id
    if not check_subscription(user_id):
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton('–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è', url=f'https://t.me/{CHANNEL_USERNAME}')
        markup.add(btn)
        bot.send_message(message.chat.id, '–©–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –±–æ—Ç–æ–º, –ø—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª:', reply_markup=markup)
        return
    log_user(user_id)
    send_main_menu(message.chat.id)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    """–ì–æ–ª–æ–≤–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    user_id = message.from_user.id
    text = message.text.strip()

    if not check_subscription(user_id):
        bot.send_message(user_id, '–ë—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è.')
        return

    if text == 'üîç –ü–æ—à—É–∫ —Ñ—ñ–ª—å–º—É –∑–∞ –∫–æ–¥–æ–º':
        bot.send_message(user_id, '–í–≤–µ–¥—ñ—Ç—å –∫–æ–¥ —Ñ—ñ–ª—å–º—É:')
        user_states[user_id] = 'awaiting_code'

    elif text == 'üé≤ –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ—ñ–ª—å–º':
        movies = load_movies()
        if movies:
            movie = random.choice(movies)
            bot.send_message(user_id, format_movie(movie))
        else:
            bot.send_message(user_id, '–ë–∞–∑–∞ —Ñ—ñ–ª—å–º—ñ–≤ –ø–æ—Ä–æ–∂–Ω—è.')

    elif text == '‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞':
        bot.send_message(user_id, 
                        "–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–∞–≥–∞—î –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏ —Ñ—ñ–ª—å–º–∏ –∑–∞ –∫–æ–¥–æ–º.\n"
                        "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
                        "- –ü–æ—à—É–∫ –∑–∞ –∫–æ–¥–æ–º\n"
                        "- –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ—ñ–ª—å–º\n"
                        "- –ü–æ—à—É–∫ –∑–∞ –∂–∞–Ω—Ä–æ–º")

    elif text == '–ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å' and user_id == ADMIN_ID:
        send_admin_panel(user_id)

    elif text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' and user_id == ADMIN_ID:
        with open(USERS_FILE, 'r', encoding='utf-8') as f:
            users = json.load(f)
        bot.send_message(user_id, f'–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {len(users)}')

    elif text == '‚óÄÔ∏è –ù–∞–∑–∞–¥':
        send_main_menu(user_id)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
    ensure_file_exists(MOVIES_FILE, [])
    ensure_file_exists(USERS_FILE, {})
    ensure_file_exists(ADMINS_FILE, [ADMIN_ID])
    
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞: {e}")
        time.sleep(15)
